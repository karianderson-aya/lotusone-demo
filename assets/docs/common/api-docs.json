{
	"id": 0,
	"name": "@aya/common",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 5,
			"name": "AyaCommonPipesModule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "import { AyaCommonPipesModule } from '@aya/common/pipes';"
					}
				]
			},
			"sources": [
				{
					"fileName": "pipes/pipes.module.ts",
					"line": 18,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/pipes/pipes.module.ts#L18"
				}
			]
		},
		{
			"id": 34,
			"name": "AyaDayJsFormatPipe",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DayJs format pipe used to format date based on pattern, timezone, and locale."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "value",
						"content": [
							{
								"kind": "text",
								"text": "The date to format, can be either a Date, number (milliseconds since UTC epoch), or a date-time string."
							}
						]
					},
					{
						"tag": "@param",
						"name": "format",
						"content": [
							{
								"kind": "text",
								"text": "Optional pattern to format date into, defaults to 'MM/dd/yyyy'."
							}
						]
					},
					{
						"tag": "@param",
						"name": "timezone",
						"content": [
							{
								"kind": "text",
								"text": "Optional time zone offset from GMT (such as '+0430'), or a standard UTC/GMT or continental US time zone abbreviation. If not specified, uses host system settings."
							}
						]
					},
					{
						"tag": "@param",
						"name": "local",
						"content": [
							{
								"kind": "text",
								"text": "Optional code for the locale format rules to use."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nexampleDate | dayJsFormat:'YYYY-MM-DD':'+0200':'fr'\n```"
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "Returns formatted date as a string, or null if value is null."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "pipes/day-js-format-pipe/day-js-format.pipe.ts",
					"line": 21,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/pipes/day-js-format-pipe/day-js-format.pipe.ts#L21"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@angular/core/index.d.ts",
						"qualifiedName": "PipeTransform"
					},
					"name": "PipeTransform",
					"package": "@angular/core"
				}
			]
		},
		{
			"id": 26,
			"name": "AyaFilterByPipe",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "FilterBy pipe used to filter arrays and observables by key and value"
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "items",
						"content": [
							{
								"kind": "text",
								"text": "An array of objects."
							}
						]
					},
					{
						"tag": "@param",
						"name": "search",
						"content": [
							{
								"kind": "text",
								"text": "An object with the property name and value you wish to filter by."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nitems | filterBy: { name: 'value' }\n```"
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "Returns an array of filtered items."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "pipes/filter-by-pipe/filter-by.pipe.ts",
					"line": 16,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/pipes/filter-by-pipe/filter-by.pipe.ts#L16"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@angular/core/index.d.ts",
						"qualifiedName": "PipeTransform"
					},
					"name": "PipeTransform",
					"package": "@angular/core"
				}
			]
		},
		{
			"id": 55,
			"name": "AyaLaunchDarklyModule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "import { AyaLaunchDarklyModule } from '@aya/common/launch-darkly';"
					}
				]
			},
			"children": [
				{
					"id": 62,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "launch-darkly/launch-darkly.module.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "new AyaLaunchDarklyModule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Only one instance of LaunchDarklyModule should be imported at the root."
									}
								]
							},
							"sources": [
								{
									"fileName": "launch-darkly/launch-darkly.module.ts",
									"line": 23,
									"character": 4,
									"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 64,
									"name": "parentModule",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 55,
										"name": "AyaLaunchDarklyModule",
										"package": "@aya/common"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 55,
								"name": "AyaLaunchDarklyModule",
								"package": "@aya/common"
							}
						}
					]
				},
				{
					"id": 56,
					"name": "forRoot",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "launch-darkly/launch-darkly.module.ts",
							"line": 35,
							"character": 11,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "forRoot",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to initialize the launch darkly module with its providers."
									}
								]
							},
							"sources": [
								{
									"fileName": "launch-darkly/launch-darkly.module.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L35"
								}
							],
							"parameters": [
								{
									"id": 58,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 61,
													"name": "featureFlags",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "launch-darkly/launch-darkly.module.ts",
															"line": 35,
															"character": 42,
															"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L35"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 60,
													"name": "key",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "launch-darkly/launch-darkly.module.ts",
															"line": 35,
															"character": 29,
															"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L35"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														61,
														60
													]
												}
											],
											"sources": [
												{
													"fileName": "launch-darkly/launch-darkly.module.ts",
													"line": 35,
													"character": 27,
													"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L35"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@angular/core/index.d.ts",
									"qualifiedName": "ModuleWithProviders"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 55,
										"name": "AyaLaunchDarklyModule",
										"package": "@aya/common"
									}
								],
								"name": "ModuleWithProviders",
								"package": "@angular/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						62
					]
				},
				{
					"title": "Methods",
					"children": [
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "launch-darkly/launch-darkly.module.ts",
					"line": 19,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly.module.ts#L19"
				}
			]
		},
		{
			"id": 8,
			"name": "AyaSafePipe",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Sanitize HTML, styles, URLs, and resource URLs.  Scripts were not included as they are too unsafe and will have to be implemented manually."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "type",
						"content": [
							{
								"kind": "text",
								"text": "Options are 'html', 'style', 'url', and 'resourceURL'. If no options provided it will default to HTML."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nyourVariable | safe:'html'\n```"
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "Returns sanitized value."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "pipes/safe-pipe/safe.pipe.ts",
					"line": 16,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/pipes/safe-pipe/safe.pipe.ts#L16"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@angular/core/index.d.ts",
						"qualifiedName": "PipeTransform"
					},
					"name": "PipeTransform",
					"package": "@angular/core"
				}
			]
		},
		{
			"id": 17,
			"name": "AyaSortByPipe",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "SortBy pipe used to sort an array either alphabetically, numerically, or by date."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "items",
						"content": [
							{
								"kind": "text",
								"text": "An array of objects."
							}
						]
					},
					{
						"tag": "@param",
						"name": "propertyName",
						"content": [
							{
								"kind": "text",
								"text": "The property name within the object to sort on."
							}
						]
					},
					{
						"tag": "@param",
						"name": "direction",
						"content": [
							{
								"kind": "text",
								"text": "The direction to sort by, options are 'asc' (ascending) or 'desc' (descending). If no direction is specified, it will default to 'asc'."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nitems | sortBy: { name: 'value' }\n```"
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "An array sorted by direction."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "pipes/sort-pipe/sort.pipe.ts",
					"line": 17,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/pipes/sort-pipe/sort.pipe.ts#L17"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@angular/core/index.d.ts",
						"qualifiedName": "PipeTransform"
					},
					"name": "PipeTransform",
					"package": "@angular/core"
				}
			]
		},
		{
			"id": 125,
			"name": "IfLDFeatureContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Feature Flag Context"
					}
				]
			},
			"sources": [
				{
					"fileName": "launch-darkly/models/feature-flag-context.model.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/models/feature-flag-context.model.ts#L4"
				}
			],
			"typeParameters": [
				{
					"id": 131,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 65,
			"name": "IfLDFeatureDirective",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Launch Darkly directive for hiding/showing based on whether a feature flag is enabled or not."
					}
				]
			},
			"children": [
				{
					"id": 81,
					"name": "ifLdFeature",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
							"line": 40,
							"character": 8,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L40"
						}
					],
					"setSignature": {
						"id": 82,
						"name": "ifLdFeature",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The Boolean expression to evaluate as the condition for showing a template."
								}
							]
						},
						"sources": [
							{
								"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
								"line": 39,
								"character": 4,
								"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L39"
							}
						],
						"parameters": [
							{
								"id": 83,
								"name": "ifLdFeature",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 90,
					"name": "ifLdFeatureElse",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
							"line": 66,
							"character": 8,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L66"
						}
					],
					"setSignature": {
						"id": 91,
						"name": "ifLdFeatureElse",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A template to show if the condition expression evaluates to false."
								}
							]
						},
						"sources": [
							{
								"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
								"line": 65,
								"character": 4,
								"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L65"
							}
						],
						"parameters": [
							{
								"id": 92,
								"name": "templateRef",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@angular/core/index.d.ts",
												"qualifiedName": "TemplateRef"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 125,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													],
													"name": "IfLDFeatureContext",
													"package": "@aya/common"
												}
											],
											"name": "TemplateRef",
											"package": "@angular/core"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 87,
					"name": "ifLdFeatureThen",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
							"line": 55,
							"character": 8,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L55"
						}
					],
					"setSignature": {
						"id": 88,
						"name": "ifLdFeatureThen",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A template to show if the condition expression evaluates to true."
								}
							]
						},
						"sources": [
							{
								"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
								"line": 54,
								"character": 4,
								"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L54"
							}
						],
						"parameters": [
							{
								"id": 89,
								"name": "templateRef",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@angular/core/index.d.ts",
												"qualifiedName": "TemplateRef"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 125,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													],
													"name": "IfLDFeatureContext",
													"package": "@aya/common"
												}
											],
											"name": "TemplateRef",
											"package": "@angular/core"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Accessors",
					"children": [
						81,
						90,
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "launch-darkly/if-launch-darkly-feature.directive.ts",
					"line": 19,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/if-launch-darkly-feature.directive.ts#L19"
				}
			],
			"typeParameters": [
				{
					"id": 99,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 100,
			"name": "LDFeatureFlagGuard",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Launch Darkly guard for allowing access to a route based on if the feature flag is enabled or not."
					}
				]
			},
			"children": [
				{
					"id": 107,
					"name": "canActivate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "launch-darkly/launch-darkly-flag.guard.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly-flag.guard.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 108,
							"name": "canActivate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether a route can be activated based on if the feature flag is enabled.\r\nRequires route data 'featureFlag' and 'url' for fallback."
									}
								]
							},
							"sources": [
								{
									"fileName": "launch-darkly/launch-darkly-flag.guard.ts",
									"line": 23,
									"character": 4,
									"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly-flag.guard.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 109,
									"name": "route",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@angular/router/index.d.ts",
											"qualifiedName": "ActivatedRouteSnapshot"
										},
										"name": "ActivatedRouteSnapshot",
										"package": "@angular/router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/rxjs/src/internal/Observable.ts",
									"qualifiedName": "Observable"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Observable",
								"package": "rxjs"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "CanActivate.canActivate"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "CanActivate.canActivate"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						107
					]
				}
			],
			"sources": [
				{
					"fileName": "launch-darkly/launch-darkly-flag.guard.ts",
					"line": 13,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/launch-darkly-flag.guard.ts#L13"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@angular/router/index.d.ts",
						"qualifiedName": "CanActivate"
					},
					"name": "CanActivate",
					"package": "@angular/router"
				}
			]
		},
		{
			"id": 146,
			"name": "LDFeatureManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Launch Darkly Manager Service for checking whether a feature flag is enabled or not."
					}
				]
			},
			"sources": [
				{
					"fileName": "launch-darkly/services/launch-darkly-feature-manager.service.ts",
					"line": 14,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/services/launch-darkly-feature-manager.service.ts#L14"
				}
			]
		},
		{
			"id": 139,
			"name": "LaunchDarklyService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Launch Darkly Service for initializing the Launch Darkly SDK."
					}
				]
			},
			"sources": [
				{
					"fileName": "launch-darkly/services/launch-darkly.service.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/services/launch-darkly.service.ts#L8"
				}
			]
		},
		{
			"id": 114,
			"name": "FeatureManagementFlag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Feature Management Flag"
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "flagName",
						"content": [
							{
								"kind": "text",
								"text": "The name of the feature flag."
							}
						]
					},
					{
						"tag": "@param",
						"name": "enabled",
						"content": [
							{
								"kind": "text",
								"text": "Whether the feature flag is enabled."
							}
						]
					},
					{
						"tag": "@param",
						"name": "value",
						"content": [
							{
								"kind": "text",
								"text": "The value of the feature flag."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "launch-darkly/models/feature-management-flag.model.ts",
					"line": 9,
					"character": 17,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/models/feature-management-flag.model.ts#L9"
				}
			]
		},
		{
			"id": 118,
			"name": "FlagState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Flag State"
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "flagState",
						"content": [
							{
								"kind": "text",
								"text": "The state the current flag is in."
							}
						]
					},
					{
						"tag": "@param",
						"name": "changedFlags",
						"content": [
							{
								"kind": "text",
								"text": "List of changed flags."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "launch-darkly/models/feature-flag-state.model.ts",
					"line": 9,
					"character": 17,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/models/feature-flag-state.model.ts#L9"
				}
			]
		},
		{
			"id": 121,
			"name": "User",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "User"
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "coreUserId",
						"content": [
							{
								"kind": "text",
								"text": "Core User ID that will be used as the context key for launch darkly."
							}
						]
					},
					{
						"tag": "@param",
						"name": "userName",
						"content": [
							{
								"kind": "text",
								"text": "User's username."
							}
						]
					},
					{
						"tag": "@param",
						"name": "email",
						"content": [
							{
								"kind": "text",
								"text": "User's email address."
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "launch-darkly/models/user.model.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/models/user.model.ts#L8"
				}
			]
		},
		{
			"id": 1,
			"name": "DownloadBlob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "download/download-blob.function.ts",
					"line": 11,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/download/download-blob.function.ts#L11"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "DownloadBlob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Download Blob Function"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nDownloadBlob(blob, 'my-file.pdf');\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "download/download-blob.function.ts",
							"line": 11,
							"character": 28,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/download/download-blob.function.ts#L11"
						}
					],
					"parameters": [
						{
							"id": 3,
							"name": "blob",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "File information to download."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Blob"
								},
								"name": "Blob",
								"package": "typescript"
							}
						},
						{
							"id": 4,
							"name": "fileName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Name of the file to download (must include extension)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 202,
			"name": "InterpolateParams",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utilities/interpolate-params.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/interpolate-params.ts#L10"
				}
			],
			"signatures": [
				{
					"id": 203,
					"name": "InterpolateParams",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interpolate parameters"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "HttpParams with interpolated parameters."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utilities/interpolate-params.ts",
							"line": 10,
							"character": 33,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/interpolate-params.ts#L10"
						}
					],
					"parameters": [
						{
							"id": 204,
							"name": "params",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parameter(s) as object property names matching url placeholders to be replaced with value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@angular/common/http/index.d.ts",
							"qualifiedName": "HttpParams"
						},
						"name": "HttpParams",
						"package": "@angular/common"
					}
				}
			]
		},
		{
			"id": 205,
			"name": "InterpolateUrl",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utilities/interpolate-url.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/interpolate-url.ts#L8"
				}
			],
			"signatures": [
				{
					"id": 206,
					"name": "InterpolateUrl",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interpolate URL with parameters"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "URL with interpolated parameters."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utilities/interpolate-url.ts",
							"line": 8,
							"character": 30,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/interpolate-url.ts#L8"
						}
					],
					"parameters": [
						{
							"id": 207,
							"name": "url",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URL with parameter placeholders."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 208,
							"name": "params",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parameter(s) as object property names matching url placeholders to be replaced with value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 209,
			"name": "IsEmptyValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utilities/is-empty.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/is-empty.ts#L7"
				}
			],
			"signatures": [
				{
					"id": 210,
					"name": "IsEmptyValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if value is an empty object, array, string, number."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if value is empty."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utilities/is-empty.ts",
							"line": 7,
							"character": 28,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/is-empty.ts#L7"
						}
					],
					"parameters": [
						{
							"id": 211,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value to check."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 212,
			"name": "IsNumber",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utilities/is-number.ts",
					"line": 20,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/is-number.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 213,
					"name": "IsNumber",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if value is a valid number."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True or false whether value is a valid number."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n{ value: undefined, result: false },\r\n{ value: null, result: false },\r\n{ value: NaN, result: false },\r\n{ value: Infinity, result: false },\r\n{ value: -Infinity, result: false },\r\n{ value: 0, result: true },\r\n{ value: -1, result: true },\r\n{ value: 1, result: true },\r\n{ value: 1.1, result: true }\r\n{ value: -1.1, result: true }\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "https://howtodoinjava.com/javascript/check-if-variable-is-number/"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utilities/is-number.ts",
							"line": 20,
							"character": 24,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/utilities/is-number.ts#L20"
						}
					],
					"parameters": [
						{
							"id": 214,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value to check."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			]
		},
		{
			"id": 132,
			"name": "assertTemplate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "launch-darkly/utilities/assert-template.function.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/utilities/assert-template.function.ts#L7"
				}
			],
			"signatures": [
				{
					"id": 133,
					"name": "assertTemplate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function to check whether the property is a valid template reference."
							}
						]
					},
					"sources": [
						{
							"fileName": "launch-darkly/utilities/assert-template.function.ts",
							"line": 7,
							"character": 30,
							"url": "https://github.com/AyaHealthcare/AngularLibrary/blob/a8b3511/projects/common/launch-darkly/utilities/assert-template.function.ts#L7"
						}
					],
					"parameters": [
						{
							"id": 134,
							"name": "property",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 135,
							"name": "templateRef",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@angular/core/index.d.ts",
											"qualifiedName": "TemplateRef"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 125,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "IfLDFeatureContext",
												"package": "@aya/common"
											}
										],
										"name": "TemplateRef",
										"package": "@angular/core"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				5,
				34,
				26,
				55,
				8,
				17,
				125,
				65,
				100,
				146,
				139
			]
		},
		{
			"title": "Interfaces",
			"children": [
				114,
				118,
				121
			]
		},
		{
			"title": "Functions",
			"children": [
				1,
				202,
				205,
				209,
				212,
				132
			]
		}
	],
	"packageName": "@aya/common",
	"readme": [
		{
			"kind": "text",
			"text": "# Common\r\n\r\nThis library was generated with [Angular CLI](https://github.com/angular/angular-cli) version 14.2.0.\r\n\r\n## Code scaffolding\r\n\r\nRun "
		},
		{
			"kind": "code",
			"text": "`ng generate component component-name --project common`"
		},
		{
			"kind": "text",
			"text": " to generate a new component. You can also use "
		},
		{
			"kind": "code",
			"text": "`ng generate directive|pipe|service|class|guard|interface|enum|module --project common`"
		},
		{
			"kind": "text",
			"text": ".\r\n> Note: Don't forget to add "
		},
		{
			"kind": "code",
			"text": "`--project common`"
		},
		{
			"kind": "text",
			"text": " or else it will be added to the default project in your "
		},
		{
			"kind": "code",
			"text": "`angular.json`"
		},
		{
			"kind": "text",
			"text": " file. \r\n\r\n## Build\r\n\r\nRun "
		},
		{
			"kind": "code",
			"text": "`ng build common`"
		},
		{
			"kind": "text",
			"text": " to build the project. The build artifacts will be stored in the "
		},
		{
			"kind": "code",
			"text": "`dist/`"
		},
		{
			"kind": "text",
			"text": " directory.\r\n\r\n## Publishing\r\n\r\nAfter building your library with "
		},
		{
			"kind": "code",
			"text": "`ng build common`"
		},
		{
			"kind": "text",
			"text": ", go to the dist folder "
		},
		{
			"kind": "code",
			"text": "`cd dist/common`"
		},
		{
			"kind": "text",
			"text": " and run "
		},
		{
			"kind": "code",
			"text": "`npm publish`"
		},
		{
			"kind": "text",
			"text": ".\r\n\r\n## Running unit tests\r\n\r\nRun "
		},
		{
			"kind": "code",
			"text": "`ng test common`"
		},
		{
			"kind": "text",
			"text": " to execute the unit tests via [Karma](https://karma-runner.github.io).\r\n\r\n## Further help\r\n\r\nTo get more help on the Angular CLI use "
		},
		{
			"kind": "code",
			"text": "`ng help`"
		},
		{
			"kind": "text",
			"text": " or go check out the [Angular CLI Overview and Command Reference](https://angular.io/cli) page."
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "projects/common/src/docs-entry.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "projects/common/download/download-blob.function.ts",
			"qualifiedName": "DownloadBlob"
		},
		"2": {
			"sourceFileName": "projects/common/download/download-blob.function.ts",
			"qualifiedName": "DownloadBlob"
		},
		"3": {
			"sourceFileName": "projects/common/download/download-blob.function.ts",
			"qualifiedName": "blob"
		},
		"4": {
			"sourceFileName": "projects/common/download/download-blob.function.ts",
			"qualifiedName": "fileName"
		},
		"5": {
			"sourceFileName": "projects/common/pipes/pipes.module.ts",
			"qualifiedName": "AyaCommonPipesModule"
		},
		"8": {
			"sourceFileName": "projects/common/pipes/safe-pipe/safe.pipe.ts",
			"qualifiedName": "AyaSafePipe"
		},
		"17": {
			"sourceFileName": "projects/common/pipes/sort-pipe/sort.pipe.ts",
			"qualifiedName": "AyaSortByPipe"
		},
		"26": {
			"sourceFileName": "projects/common/pipes/filter-by-pipe/filter-by.pipe.ts",
			"qualifiedName": "AyaFilterByPipe"
		},
		"34": {
			"sourceFileName": "projects/common/pipes/day-js-format-pipe/day-js-format.pipe.ts",
			"qualifiedName": "AyaDayJsFormatPipe"
		},
		"55": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "AyaLaunchDarklyModule"
		},
		"56": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "AyaLaunchDarklyModule.forRoot"
		},
		"57": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "AyaLaunchDarklyModule.forRoot"
		},
		"58": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "config"
		},
		"59": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "__type"
		},
		"60": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "__type.key"
		},
		"61": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"62": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "AyaLaunchDarklyModule.__constructor"
		},
		"63": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "AyaLaunchDarklyModule"
		},
		"64": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly.module.ts",
			"qualifiedName": "parentModule"
		},
		"65": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective"
		},
		"81": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.ifLdFeature"
		},
		"82": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.ifLdFeature"
		},
		"83": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "ifLdFeature"
		},
		"87": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.ifLdFeatureThen"
		},
		"88": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.ifLdFeatureThen"
		},
		"89": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "templateRef"
		},
		"90": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.ifLdFeatureElse"
		},
		"91": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.ifLdFeatureElse"
		},
		"92": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "templateRef"
		},
		"99": {
			"sourceFileName": "projects/common/launch-darkly/if-launch-darkly-feature.directive.ts",
			"qualifiedName": "IfLDFeatureDirective.T"
		},
		"100": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly-flag.guard.ts",
			"qualifiedName": "LDFeatureFlagGuard"
		},
		"107": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly-flag.guard.ts",
			"qualifiedName": "LDFeatureFlagGuard.canActivate"
		},
		"108": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly-flag.guard.ts",
			"qualifiedName": "LDFeatureFlagGuard.canActivate"
		},
		"109": {
			"sourceFileName": "projects/common/launch-darkly/launch-darkly-flag.guard.ts",
			"qualifiedName": "route"
		},
		"114": {
			"sourceFileName": "projects/common/launch-darkly/models/feature-management-flag.model.ts",
			"qualifiedName": "FeatureManagementFlag"
		},
		"118": {
			"sourceFileName": "projects/common/launch-darkly/models/feature-flag-state.model.ts",
			"qualifiedName": "FlagState"
		},
		"121": {
			"sourceFileName": "projects/common/launch-darkly/models/user.model.ts",
			"qualifiedName": "User"
		},
		"125": {
			"sourceFileName": "projects/common/launch-darkly/models/feature-flag-context.model.ts",
			"qualifiedName": "IfLDFeatureContext"
		},
		"131": {
			"sourceFileName": "projects/common/launch-darkly/models/feature-flag-context.model.ts",
			"qualifiedName": "IfLDFeatureContext.T"
		},
		"132": {
			"sourceFileName": "projects/common/launch-darkly/utilities/assert-template.function.ts",
			"qualifiedName": "assertTemplate"
		},
		"133": {
			"sourceFileName": "projects/common/launch-darkly/utilities/assert-template.function.ts",
			"qualifiedName": "assertTemplate"
		},
		"134": {
			"sourceFileName": "projects/common/launch-darkly/utilities/assert-template.function.ts",
			"qualifiedName": "property"
		},
		"135": {
			"sourceFileName": "projects/common/launch-darkly/utilities/assert-template.function.ts",
			"qualifiedName": "templateRef"
		},
		"139": {
			"sourceFileName": "projects/common/launch-darkly/services/launch-darkly.service.ts",
			"qualifiedName": "LaunchDarklyService"
		},
		"146": {
			"sourceFileName": "projects/common/launch-darkly/services/launch-darkly-feature-manager.service.ts",
			"qualifiedName": "LDFeatureManager"
		},
		"202": {
			"sourceFileName": "projects/common/utilities/interpolate-params.ts",
			"qualifiedName": "InterpolateParams"
		},
		"203": {
			"sourceFileName": "projects/common/utilities/interpolate-params.ts",
			"qualifiedName": "InterpolateParams"
		},
		"204": {
			"sourceFileName": "projects/common/utilities/interpolate-params.ts",
			"qualifiedName": "params"
		},
		"205": {
			"sourceFileName": "projects/common/utilities/interpolate-url.ts",
			"qualifiedName": "InterpolateUrl"
		},
		"206": {
			"sourceFileName": "projects/common/utilities/interpolate-url.ts",
			"qualifiedName": "InterpolateUrl"
		},
		"207": {
			"sourceFileName": "projects/common/utilities/interpolate-url.ts",
			"qualifiedName": "url"
		},
		"208": {
			"sourceFileName": "projects/common/utilities/interpolate-url.ts",
			"qualifiedName": "params"
		},
		"209": {
			"sourceFileName": "projects/common/utilities/is-empty.ts",
			"qualifiedName": "IsEmptyValue"
		},
		"210": {
			"sourceFileName": "projects/common/utilities/is-empty.ts",
			"qualifiedName": "IsEmptyValue"
		},
		"211": {
			"sourceFileName": "projects/common/utilities/is-empty.ts",
			"qualifiedName": "value"
		},
		"212": {
			"sourceFileName": "projects/common/utilities/is-number.ts",
			"qualifiedName": "IsNumber"
		},
		"213": {
			"sourceFileName": "projects/common/utilities/is-number.ts",
			"qualifiedName": "IsNumber"
		},
		"214": {
			"sourceFileName": "projects/common/utilities/is-number.ts",
			"qualifiedName": "value"
		}
	}
}